" .vimrc - Vim configuration file

let mapleader=' '
filetype plugin on
filetype indent on
syntax enable
runtime ftplugin/man.vim
set rtp+=/opt/homebrew/opt/fzf

" Configuration Options
set guicursor=
set regexpengine=2
set background=dark
set backspace=indent,eol,start
set colorcolumn=120
set encoding=utf-8
set keywordprg=:Man
set laststatus=2
set number
set splitright
set splitbelow
set nocompatible
set noswapfile
set wildmenu
set incsearch
set hlsearch
set showmatch
set smartcase
set cursorline
set fillchars=eob:\ ,
set undodir=$HOME/.vim/undo
set undolevels=10000
set undofile

" Set colorscheme
colorscheme retrobox

" Key mappings
nmap n nzz
nmap N Nzz
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-h> <C-w>h
nmap <C-l> <C-w>l
nmap <C-n> :Lexplore<cr>
nmap <C-p> :FZF --bind ctrl-p:abort<cr>
nmap <C-b> :Buffers<cr>
nmap <C-t> :Tags <cr>
nmap <silent><leader>jq :%!jq '.'<CR>
nmap <silent><leader>g :GitBlame<CR>
nmap <silent><leader>rg :RG<CR>

" Plugin manager setup
let config_dir = '~/.vim'
if empty(glob(config_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.config_dir.'/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Install plugins
call plug#begin()
  Plug 'darthfork/git-blame.vim'
  Plug 'dense-analysis/ale'
  Plug 'junegunn/fzf.vim'
  Plug 'mhinz/vim-signify'
  Plug 'ryanoasis/vim-devicons'
  Plug 'sheerun/vim-polyglot'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
call plug#end()

" Plugin configurations
let g:airline_theme='hybridline'
let g:airline_powerline_fonts = 0
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#tabline#tab_nr_type = 1
let g:fzf_tags_command = 'ctags -R --exclude=.git --exclude=node_modules --exclude=docs --exclude=.venv --exclude=.terraform'
let g:fzf_layout = { 'down':  '40%'}
let g:ale_fix_on_save = 1
let g:ale_fixers = { '*': ['remove_trailing_lines', 'trim_whitespace'], 'json': ['jq'] }
let g:ale_linters = { 'sh': ['shellcheck'], }

" NetRW Settings
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 0
let g:netrw_altv = 1
let g:netrw_winsize = 25
let g:netrw_winsize = -28

" Filetype-specific settings
highlight BadWhitespace ctermbg=red guibg=red
augroup filetypesettings
  autocmd FileType *                    set ai ts=4 sw=4 si sta et
  autocmd FileType bash                 set ai ts=4 sw=4 si sta et
  autocmd FileType c                    set ai ts=4 sw=4 si sta et
  autocmd FileType cpp                  set ai ts=4 sw=4 si sta et
  autocmd FileType go                   set ai ts=8 sw=8 si sta noet list
  autocmd FileType html                 set ai ts=2 sw=2 si sta et
  autocmd FileType javascript           set ai ts=2 sw=2 si sta et
  autocmd FileType lua                  set ai ts=2 sw=2 si sta et
  autocmd FileType make                 set ai ts=8 sw=8 si sta noet list
  autocmd FileType markdown             set ai ts=2 sw=2 si sta et spell spelllang=en_us
  autocmd FileType python               set ai ts=4 sw=4 si sta et
  autocmd FileType rst                  set ai ts=4 sw=4 si sta et spell spelllang=en_us
  autocmd FileType ruby                 set ai ts=2 sw=2 si sta et
  autocmd FileType rust                 set ai ts=4 sw=4 si sta et
  autocmd FileType terraform            set ai ts=2 sw=2 si sta et
  autocmd FileType typescript           set ai ts=2 sw=2 si sta et
  autocmd FileType yaml                 set ai ts=2 sw=2 si sta et
  autocmd BufRead,BufNewFile Tiltfile   set filetype=bzl
  autocmd BufRead,BufNewFile *.tilt     set filetype=bzl
  autocmd BufRead,BufNewFile vimrc      setlocal keywordprg=:help
  autocmd BufRead,BufNewFile init.lua   setlocal keywordprg=:help
augroup END
